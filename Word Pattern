import java.util.*;

class Solution {
    public boolean wordPattern(String pattern, String s) {
        String[] words = s.split(" ");
        if (pattern.length() != words.length) return false;

        Map<Character, String> map = new HashMap<>();
        Set<String> used = new HashSet<>();

        for (int i = 0; i < pattern.length(); i++) {
            char p = pattern.charAt(i);
            String w = words[i];

            if (map.containsKey(p)) {
                if (!map.get(p).equals(w)) return false; // existing mapping mismatch
            } else {
                if (used.contains(w)) return false;       // another letter already maps to this word
                map.put(p, w);
                used.add(w);
            }
        }
        return true;
    }
}
