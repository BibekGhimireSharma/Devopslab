class Solution {
    public int strStr(String haystack, String needle) {
        // If needle is empty, return 0
        if (needle.length() == 0)
            return 0;

        // Loop through haystack up to the point where needle can still fit
        for (int i = 0; i <= haystack.length() - needle.length(); i++) {
            // If substring matches the needle
            if (haystack.substring(i, i + needle.length()).equals(needle)) {
                return i; // Return starting index
            }
        }

        // If not found, return -1
        return -1;
    }
}
